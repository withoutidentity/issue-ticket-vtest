generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String // Hashed password
  name         String
  role         Role     @default(USER)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  refreshToken String? // สำหรับ Refresh Token
  tickets      Ticket[]

  @@map("users")
}

model Ticket {
  id           Int           @id @default(autoincrement())
  user_id      Int?
  title        String        @db.VarChar(255)
  description  String?
  type_id      Int?
  priority     TicketPriority?
  contact      String?       @db.VarChar(255)
  department   String?       @db.VarChar(255)
  status       TicketStatus  @default(open)
  created_at   DateTime      @default(now())
  updated_at   DateTime      @default(now())
  ticket_types ticket_types? @relation(fields: [type_id], references: [id])
  user         User?         @relation(fields: [user_id], references: [id])
  files        TicketFile[]  // แนบหลายไฟล์ต่อ Ticket

  @@index([type_id], map: "idx_tickets_type_id")
  @@map("tickets")
}

model ticket_types {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  description String?
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
  tickets     Ticket[]
}

model TicketFile {
  id        Int      @id @default(autoincrement())
  ticket_id Int
  filename  String   @db.VarChar(255)
  filepath  String   @db.VarChar(512)
  uploaded  DateTime @default(now())
  ticket    Ticket   @relation(fields: [ticket_id], references: [id])

  @@index([ticket_id])
  @@map("ticket_files")
}

enum Role {
  USER
  OFFICER
  ADMIN
  BANNED
}

enum TicketStatus {
  open
  in_progress
  resolved
  closed
}

enum TicketPriority {
  low
  medium
  high
}